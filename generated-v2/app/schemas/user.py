# Generated by pg-scaffolding 2025-09-29 09:30:47
from pydantic import BaseModel, EmailStr
from typing import List, Optional
from datetime import datetime, date
from uuid import UUID

from .base import BaseSchema, BaseCreateSchema, BaseReadSchema, BaseUpdateSchema

class UserBase(BaseSchema):
    first_name: str
    last_name: str
    email: str
    password: Optional[str] = None
    organization: Optional[str] = None
    magic_link_token: Optional[str] = None
    magic_link_expires_at: Optional[str] = None
    last_login_at: Optional[str] = None


class UserCreate(UserBase, BaseCreateSchema):
    id: Optional[int] = None

class UserRead(UserBase, BaseReadSchema):
    id: Optional[int] = None
    is_verified: bool
    registered_at: datetime
    role: str


class UserUpdate(UserBase, BaseUpdateSchema):
    id: Optional[int] = None
    first_name: Optional[str] = None
    last_name: Optional[str] = None
    email: Optional[str] = None
    password: Optional[str] = None
    organization: Optional[str] = None
    is_verified: Optional[bool] = None
    magic_link_token: Optional[str] = None
    magic_link_expires_at: Optional[str] = None
    registered_at: Optional[datetime] = None
    last_login_at: Optional[str] = None
    role: Optional[str] = None



#-- Preserve Custom code START --#
class LoginRequest(BaseModel):
    email: str
    password: str
    
class LoginResponse(BaseModel):
    access_token: str
    token_type: str = "bearer"
    user: UserRead 
#-- Preserve Custom code END   --#
