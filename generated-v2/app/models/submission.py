# Generated by pg-scaffolding 2025-09-29 09:30:47
from __future__ import annotations

from datetime import datetime, date

from sqlalchemy import String, Integer, Float, Boolean, Date, DateTime, TIMESTAMP, UUID, ForeignKey, func, text

from sqlalchemy.orm import Mapped, mapped_column

from app.models.base import Base

class SubmissionModel(Base):
    __tablename__ = 'submission'

    id: Mapped[int] = mapped_column(Integer, primary_key=True,  nullable=False)
    event_id: Mapped[int] = mapped_column(Integer, ForeignKey('events.id'), nullable=False)
    participant_id: Mapped[int] = mapped_column(Integer, ForeignKey('participant.id'), nullable=False)
    title: Mapped[str] = mapped_column(String,  nullable=False)
    short_description: Mapped[str | None] = mapped_column(String, nullable=True )
    description_abstract: Mapped[str] = mapped_column(String,  nullable=False)
    submission_category: Mapped[str] = mapped_column(String,  nullable=False)
    submission_sub_category: Mapped[str | None] = mapped_column(String, nullable=True )
    keywords: Mapped[str | None] = mapped_column(String, nullable=True )
    external_link: Mapped[str | None] = mapped_column(String, nullable=True )
    submission_status: Mapped[str] = mapped_column(String, server_default=text("'Submitted'"),  nullable=False)
    created_at: Mapped[datetime] = mapped_column(DateTime(timezone=True), server_default=func.now(),  nullable=False)
    updated_at: Mapped[datetime] = mapped_column(DateTime(timezone=True), server_default=func.now(),  nullable=False)

#-- Preserve Custom code START --#
#-- Preserve Custom code END   --#
