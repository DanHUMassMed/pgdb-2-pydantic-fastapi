# Generated by pg-scaffolding 2025-09-29 09:30:47
from __future__ import annotations

from datetime import datetime, date

from sqlalchemy import String, Integer, Float, Boolean, Date, DateTime, TIMESTAMP, UUID, ForeignKey, func, text

from sqlalchemy.orm import Mapped, mapped_column

from app.models.base import Base

class CriterionModel(Base):
    __tablename__ = 'criteria'

    id: Mapped[int] = mapped_column(Integer, primary_key=True,  nullable=False)
    event_id: Mapped[int] = mapped_column(Integer, ForeignKey('events.id'), nullable=False)
    label: Mapped[str] = mapped_column(String,  nullable=False)
    description: Mapped[str] = mapped_column(String,  nullable=False)
    category: Mapped[str | None] = mapped_column(String, nullable=True )
    required: Mapped[bool] = mapped_column(Boolean, server_default=text("true"),  nullable=False)
    sort_pos: Mapped[int] = mapped_column(Integer,  nullable=False)
    weight: Mapped[float] = mapped_column(Float, server_default=text("1"),  nullable=False)
    max_rating_value: Mapped[int] = mapped_column(Integer, server_default=text("1"),  nullable=False)
    value_descriptors: Mapped[str | None] = mapped_column(String, nullable=True )
    created_at: Mapped[datetime] = mapped_column(DateTime(timezone=True), server_default=func.now(),  nullable=False)
    updated_at: Mapped[datetime] = mapped_column(DateTime(timezone=True), server_default=func.now(),  nullable=False)

#-- Preserve Custom code START --#
#-- Preserve Custom code END   --#
