# Generated by pg-scaffolding 2025-09-29 09:30:47
from __future__ import annotations

from datetime import datetime, date

from sqlalchemy import String, Integer, Float, Boolean, Date, DateTime, TIMESTAMP, UUID, ForeignKey, func, text

from sqlalchemy.orm import Mapped, mapped_column

from app.models.base import Base

class UserModel(Base):
    __tablename__ = 'users'

    id: Mapped[int] = mapped_column(Integer, primary_key=True,  nullable=False)
    first_name: Mapped[str] = mapped_column(String,  nullable=False)
    last_name: Mapped[str] = mapped_column(String,  nullable=False)
    email: Mapped[str] = mapped_column(String, index=True, unique=True,  nullable=False)
    password: Mapped[str | None] = mapped_column(String, nullable=True )
    organization: Mapped[str | None] = mapped_column(String, nullable=True )
    is_verified: Mapped[bool] = mapped_column(Boolean, server_default=text("false"),  nullable=False)
    magic_link_token: Mapped[str | None] = mapped_column(String, nullable=True )
    magic_link_expires_at: Mapped[str | None] = mapped_column(String, nullable=True )
    registered_at: Mapped[datetime] = mapped_column(DateTime(timezone=True), server_default=func.now(),  nullable=False)
    last_login_at: Mapped[str | None] = mapped_column(String, nullable=True )
    role: Mapped[str] = mapped_column(String, server_default=text("'user'"),  nullable=False)

#-- Preserve Custom code START --#
#-- Preserve Custom code END   --#
