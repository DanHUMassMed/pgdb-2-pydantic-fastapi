# Generated by pg-scaffolding 2025-09-29 09:30:47
from __future__ import annotations

from datetime import datetime, date

from sqlalchemy import String, Integer, Float, Boolean, Date, DateTime, TIMESTAMP, UUID, ForeignKey, func, text

from sqlalchemy.orm import Mapped, mapped_column

from app.models.base import Base

class EventModel(Base):
    __tablename__ = 'events'

    id: Mapped[int] = mapped_column(Integer, primary_key=True,  nullable=False)
    user_id: Mapped[int] = mapped_column(Integer, ForeignKey('users.id'), nullable=False)
    name: Mapped[str] = mapped_column(String,  nullable=False)
    description: Mapped[str | None] = mapped_column(String, nullable=True )
    event_tz: Mapped[str] = mapped_column(String,  nullable=False)
    start_date_time: Mapped[datetime] = mapped_column(DateTime(timezone=True),  nullable=False)
    end_date_time: Mapped[datetime] = mapped_column(DateTime(timezone=True),  nullable=False)
    location: Mapped[str | None] = mapped_column(String, nullable=True )
    affiliation: Mapped[str | None] = mapped_column(String, nullable=True )
    logo_path: Mapped[str | None] = mapped_column(String, nullable=True )
    max_participants_per_evaluator: Mapped[int] = mapped_column(Integer,  nullable=False)
    created_at: Mapped[datetime] = mapped_column(DateTime(timezone=True), server_default=func.now(),  nullable=False)

#-- Preserve Custom code START --#
#-- Preserve Custom code END   --#
