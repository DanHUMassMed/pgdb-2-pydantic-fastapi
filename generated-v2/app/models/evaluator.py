# Generated by pg-scaffolding 2025-09-29 09:30:47
from __future__ import annotations

from datetime import datetime, date

from sqlalchemy import String, Integer, Float, Boolean, Date, DateTime, TIMESTAMP, UUID, ForeignKey, func, text

from sqlalchemy.orm import Mapped, mapped_column

from app.models.base import Base

class EvaluatorModel(Base):
    __tablename__ = 'evaluators'

    id: Mapped[int] = mapped_column(Integer, primary_key=True,  nullable=False)
    event_id: Mapped[int] = mapped_column(Integer, ForeignKey('events.id'),index=True, unique=True,  nullable=False)
    first_name: Mapped[str] = mapped_column(String,  nullable=False)
    last_name: Mapped[str] = mapped_column(String,  nullable=False)
    email: Mapped[str] = mapped_column(String, index=True, unique=True,  nullable=False)
    phone: Mapped[str | None] = mapped_column(String, nullable=True )
    title_role: Mapped[str | None] = mapped_column(String, nullable=True )
    affiliation: Mapped[str | None] = mapped_column(String, nullable=True )
    expertise_description: Mapped[str | None] = mapped_column(String, nullable=True )
    areas_of_expertise: Mapped[str | None] = mapped_column(String, nullable=True )
    status: Mapped[str | None] = mapped_column(String, nullable=True )
    accepted_invite_token: Mapped[str | None] = mapped_column(String, nullable=True )
    accepted_invite_date: Mapped[datetime | None] = mapped_column(DateTime(timezone=True), nullable=True )
    accepted_invite: Mapped[bool] = mapped_column(Boolean, server_default=text("false"),  nullable=False)
    created_at: Mapped[datetime] = mapped_column(DateTime(timezone=True), server_default=func.now(),  nullable=False)
    updated_at: Mapped[datetime] = mapped_column(DateTime(timezone=True), server_default=func.now(),  nullable=False)

#-- Preserve Custom code START --#
#-- Preserve Custom code END   --#
