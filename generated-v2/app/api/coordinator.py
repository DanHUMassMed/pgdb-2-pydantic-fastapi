# Generated by pg-scaffolding 2025-09-29 09:30:47
from typing import List

from fastapi import APIRouter, Depends, HTTPException, Query
from sqlalchemy.orm import Session

from app.crud import coordinator
from app.schemas import coordinator as coordinator_schema
from app.core.db import SessionLocal

router = APIRouter()

# Dependency
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()



@router.post("/coordinators/", response_model=coordinator_schema.CoordinatorCreate)
def create_coordinators(coordinator_in: coordinator_schema.CoordinatorCreate, db: Session = Depends(get_db)):
    db_obj = coordinator.crud.create(db=db, obj_in=coordinator_in)
    return db_obj


@router.get("/coordinators/", response_model=List[coordinator_schema.CoordinatorRead])
def read_coordinators(skip: int = 0, limit: int = 100, db: Session = Depends(get_db)):
    db_obj = coordinator.crud.get_multi(db, skip=skip, limit=limit)
    return db_obj


@router.get("/coordinators/{coordinator_id}", response_model=coordinator_schema.CoordinatorRead)
def read_one_coordinators(coordinator_id: int, db: Session = Depends(get_db)):
    db_obj = coordinator.crud.get(db, id=coordinator_id)
    if db_obj is None:
        raise HTTPException(status_code=404, detail="Coordinator not found")
    return db_obj


@router.put("/coordinators/{coordinator_id}", response_model=coordinator_schema.CoordinatorRead)
def update_coordinators(coordinator_id: int, coordinator_update: coordinator_schema.CoordinatorUpdate, db: Session = Depends(get_db)):
    db_obj = coordinator.crud.get(db, id=coordinator_id)
    if db_obj is None:
        raise HTTPException(status_code=404, detail="Coordinator not found")
    return coordinator.crud.update(db=db, db_obj=db_obj, obj_in=coordinator_update)


@router.delete("/coordinators/{coordinator_id}", response_model=coordinator_schema.CoordinatorRead)
def delete_coordinators(coordinator_id: int, db: Session = Depends(get_db)):
    db_obj = coordinator.crud.get(db, id=coordinator_id)
    if db_obj is None:
        raise HTTPException(status_code=404, detail="Coordinator not found")
    return coordinator.crud.remove(db=db, id=coordinator_id)



#-- Preserve Custom code START --#
#-- Preserve Custom code END   --#
