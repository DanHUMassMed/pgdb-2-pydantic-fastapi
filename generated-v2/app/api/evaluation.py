# Generated by pg-scaffolding 2025-09-29 09:30:47
from typing import List

from fastapi import APIRouter, Depends, HTTPException, Query
from sqlalchemy.orm import Session

from app.crud import evaluation
from app.schemas import evaluation as evaluation_schema
from app.core.db import SessionLocal

router = APIRouter()

# Dependency
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()



@router.post("/evaluations/", response_model=evaluation_schema.EvaluationCreate)
def create_evaluations(evaluation_in: evaluation_schema.EvaluationCreate, db: Session = Depends(get_db)):
    db_obj = evaluation.crud.create(db=db, obj_in=evaluation_in)
    return db_obj


@router.get("/evaluations/", response_model=List[evaluation_schema.EvaluationRead])
def read_evaluations(skip: int = 0, limit: int = 100, db: Session = Depends(get_db)):
    db_obj = evaluation.crud.get_multi(db, skip=skip, limit=limit)
    return db_obj


@router.get("/evaluations/{evaluation_id}", response_model=evaluation_schema.EvaluationRead)
def read_one_evaluations(evaluation_id: int, db: Session = Depends(get_db)):
    db_obj = evaluation.crud.get(db, id=evaluation_id)
    if db_obj is None:
        raise HTTPException(status_code=404, detail="Evaluation not found")
    return db_obj


@router.put("/evaluations/{evaluation_id}", response_model=evaluation_schema.EvaluationRead)
def update_evaluations(evaluation_id: int, evaluation_update: evaluation_schema.EvaluationUpdate, db: Session = Depends(get_db)):
    db_obj = evaluation.crud.get(db, id=evaluation_id)
    if db_obj is None:
        raise HTTPException(status_code=404, detail="Evaluation not found")
    return evaluation.crud.update(db=db, db_obj=db_obj, obj_in=evaluation_update)


@router.delete("/evaluations/{evaluation_id}", response_model=evaluation_schema.EvaluationRead)
def delete_evaluations(evaluation_id: int, db: Session = Depends(get_db)):
    db_obj = evaluation.crud.get(db, id=evaluation_id)
    if db_obj is None:
        raise HTTPException(status_code=404, detail="Evaluation not found")
    return evaluation.crud.remove(db=db, id=evaluation_id)



#-- Preserve Custom code START --#
#-- Preserve Custom code END   --#
