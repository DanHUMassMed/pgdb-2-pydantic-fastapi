from sqlalchemy.orm import Query, joinedload
from app.crud.base import CRUDBase
from app.models.{{ file_name }} import {{ class_name }}
from app.schemas.{{ file_name }} import {{ class_name }}Create, {{ class_name }}Update



class CRUD{{ class_name }}(CRUDBase[{{ class_name }}, {{ class_name }}Create, {{ class_name }}Update]):
    """Support simple Create Read Update and Delete (CRUD)"""
    #-- Preserve Custom code START --#
    #-- Preserve Custom code END   --#
{% if relationships %}
    def _apply_get_hook(self, query: Query) -> Query:
        return query.options(
            {% for relationship in relationships %}
            {% if relationship.relation_type =="foreign_key" %}
            joinedload({{ class_name }}.{{ relationship.variable_name }}),
            {% endif -%}
            {% endfor %}
        )

    def _apply_multi_hook(self, query: Query) -> Query:
        return query.options(
            {% for relationship in relationships %}
            joinedload({{ class_name }}.{{ relationship.variable_name }}),
            {% endfor %}
        )

    def _apply_filter_hook(self, query: Query) -> Query:
        return query.options(
            {% for relationship in relationships %}
            joinedload({{ class_name }}.{{ relationship.variable_name }}),
            {% endfor %}
        )

{% else %}
    # No relationships to handle

{% endif -%} 

crud = CRUD{{ class_name }}({{ class_name }})


